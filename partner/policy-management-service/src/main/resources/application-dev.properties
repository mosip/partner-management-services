mosip.api.internal.url=dev.mosip.net
keycloak.external.url=dev.mosip.net
mosip.pms.client.secret=

mosip.kernel.xsdstorage-uri=${spring.cloud.config.uri}/${spring.application.name}/${spring.profiles.active}/${spring.cloud.config.label}/

javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url = jdbc:postgresql://dev.mosip.net:5432/mosip_pms
javax.persistence.jdbc.password = 
javax.persistence.jdbc.user = postgres
javax.persistence.jdbc.schema = pms
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

hibernate.jdbc.lob.non_contextual_creation=true
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.format_sql=false
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

mosip.auth.filter_disable=false
pmp.policy.allowed.authtokens.types=random,partner,policy
pmp.policy.expiry.period.indays = 180
pmp.policy.schema.url= https://schemas.mosip.io/v1/auth-policy
pmp.allowed.policy.types=Auth,DataShare,CredentialIssuance,MISP,Binding
pmp.binding.policy.schema = ${mosip.kernel.xsdstorage-uri}binding-policy-schema.json
pmp.auth.policy.schema = ${mosip.kernel.xsdstorage-uri}auth-policy-schema.json
pmp.datashare.policy.schema=${mosip.kernel.xsdstorage-uri}data-share-policy-schema.json
pmp.credentialissuance.policy.schema=${mosip.kernel.xsdstorage-uri}data-share-policy-schema.json
pmp.misp.policy.schema = ${mosip.kernel.xsdstorage-uri}misp-policy-schema.json
policy.allowed.kyc.attributes = {"fullName": "Full Name","middleName": "Middle Name","lastName": "Last Name","dateOfBirth": "DateOfBirth","gender": "Gender","phone": "phone"}

mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter
websub.publish.url=${mosip.api.internal.url}/websub/publish
mosip.kernel.masterdata.audit-url=${mosip.api.internal.url}/v1/auditmanager/audits=

master.search.maximum.rows =100

mosip.iam.base-url=${keycloak.external.url}

#------------------------Auth-Adapter-----------------------------------------------
auth.server.validate.url=${mosip.api.internal.url}/v1/authmanager/authorize/admin/validateToken
auth.server.admin.validate.url=${mosip.api.internal.url}/v1/authmanager/authorize/admin/validateToken
auth.jwt.secret=authjwtsecret
auth.jwt.base=Mosip-Token
iam.datastore.commonname=morocco
#
##mosip.keycloak.issuerUrl=${mosip.iam.base-url}/auth/realms/mosip
##auth-token-generator.rest.issuerUrl=${mosip.keycloak.issuerUrl}
##
auth.server.admin.issuer.uri=${mosip.iam.base-url}/auth/realms/
auth.server.admin.offline.token.validate=false
#
#auth.server.admin.issuer.internal.uri=${mosip.iam.base-url}/auth/realms/

pmp.api.version=v1
server.port=9101
server.servlet.context-path=/${pmp.api.version}/policymanager
partner.search.maximum.rows=5

emailResourse.url=${mosip.api.internal.url}/v1/notifier/email/send
resource.template.url=${mosip.api.internal.url}/v1/masterdata/templates/{langcode}/{templatetypecode}
timeZone=Asia/Calcutta
mosip.mandatory-languages=eng
notifications.sent.before.days = 3
partner.registration.sub-template = partner-reg-sub-template
partner.reg.content-template=partner-reg-content-template
partner.status.sub-template=partner-status-sub-template
partner.status.content-template=partner-status-content-template
partner.apikey.status.sub-template=partner-apikey-status-sub-template
apikey.status.content-template=apikey-status-content-template
pms.notifications-schedule.init-delay = 24
pms.notifications-schedule.fixed-rate=24

mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip',toolkit:'mosip'}
auth.server.admin.allowed.audience=mosip-creser-client,mosip-datsha-client,mosip-ida-client,mosip-regproc-client,mosip-admin-client,mosip-reg-client,mosip-pms-client,mosip-resident-client,mosip-idrepo-client,mosip-deployment-client
mosip.iam.adapter.appid=partner
mosip.iam.certs_endpoint=${mosip.iam.base-url}/auth/realms/mosip/protocol/openid-connect/certs
mosip.iam.adapter.clientid=mosip-pms-client
mosip.iam.adapter.clientsecret=${mosip.pms.client.secret}
mosip.iam.authorization_endpoint=${mosip.iam.base-url}/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.iam.token_endpoint=${mosip.iam.base-url}/auth/realms/mosip/protocol/openid-connect/token

mosip.notification.timezone=GMT+05:30

mosip.pms.esignet.config-url=${mosip.api.internal.url}/v1/idp/oidc/.well-known/openid-configuration
mosip.pms.esignet.claims-mapping-file-url= https://raw.githubusercontent.com/mosip/mosip-config/develop/identity-mapping.json
mosip.pms.esignet.amr-acr-mapping-file-url=https://raw.githubusercontent.com/mosip/mosip-config/develop/amr-acr-mapping.json

mosip.role.pms.postpoliciesgroupnew=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.putpoliciesgrouppolicygroupid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpolicies=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciespolicyidgrouppublish=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.putpoliciespolicyid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.patchpoliciespolicyidgrouppolicygroupid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpolicies=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciespolicyid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesapikey=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciespolicyidpartnerpartnerid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesgrouppolicygroupid=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesgroupall=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciesgroupsearch=PARTNER_ADMIN,AUTH_PARTNER,CREDENTIAL_PARTNER,PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciessearch=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.getpoliciesconfigkey=PARTNER_ADMIN,POLICYMANAGER
mosip.role.pms.postpoliciesgroupfiltervalues=PARTNER_ADMIN,PARTNER,AUTH_PARTNER,CREDENTIAL_PARTNER,POLICYMANAGER,PARTNER
mosip.role.pms.postpoliciesfiltervalues=PARTNER_ADMIN,PARTNER,AUTH_PARTNER,CREDENTIAL_PARTNER,POLICYMANAGER,PARTNER
mosip.role.pms.getactivegroupgroupname=AUTH_PARTNER,CREDENTIAL_PARTNER,PARTNER_ADMIN,ONLINE_VERIFICATION_PARTNER,ABIS_PARTNER,MANUAL_ADJUDICATION,POLICYMANAGER