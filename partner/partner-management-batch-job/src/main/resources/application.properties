mosip.api.internal.url=https://dev.mosip.net
keycloak.external.url=https://dev.mosip.net
mosip.kernel.keymanager.url=https://dev.mosip.net
mosip.pms.client.secret=

spring.application.name=partner-management-batch-job

# PMS Database Configuration
spring.datasource.url=jdbc:postgresql://dev.mosip.net/mosip_pms
spring.datasource.hikari.schema=pms
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

spring.h2.console.enabled=true

# Hibernate Settings
spring.jpa.hibernate.ddl-auto=none

# Spring Batch Schema Setup
spring.batch.jdbc.initialize-schema=never
spring.batch.job.enabled=false

# Database Transaction Settings
spring.batch.jdbc.transaction-isolation-level=ISOLATION_READ_COMMITTED

# Chunk Processing Configuration
spring.batch.chunk.size=10

# Error Handling
spring.batch.skip.enabled=true
spring.batch.skip.limit=10

###############Keycloak configuration ##########################
mosip.iam.base-url=${keycloak.external.url}
mosip.iam.realm.operations.base-url = ${mosip.iam.base-url}/auth/admin/realms/{realmId}
mosip.iam.admin-url =${mosip.iam.base-url}/auth/admin/
mosip.iam.admin-realm-id =admin
mosip.iam.roles-extn-url =realms/mosip/roles
mosip.iam.users-extn-url = realms/mosip/users
mosip.iam.role-user-mapping-url =/{userId}/role-mappings/realm
mosip.iam.open-id-url =${mosip.iam.base-url}/auth/realms/{realmId}/protocol/openid-connect/
mosip.iam.master.realm-id=master
mosip.iam.default.realm-id=mosip
mosip.pmp.partner.policy.expiry.period.indays=180
mosip.iam.pre-reg_user_password =mosip
mosip.keycloak.admin.client.id=admin-cli
mosip.keycloak.admin.user.id=admin
mosip.keycloak.admin.secret.key=admin

#Auth Adapter
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter
mosip.auth.filter_disable=false
mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}
auth.server.admin.issuer.uri=${mosip.iam.base-url}/auth/realms/
auth.server.admin.issuer.internal.uri=${mosip.iam.base-url}/auth/realms/

# logging level
logging.level.org.springframework=ERROR
logging.level.com.mkyong=DEBUG

# output to a file
logging.file=app.log

# keymanager
pmp.partner.original.certificate.get.rest.uri=${mosip.kernel.keymanager.url}/v1/keymanager/getPartnerSignedCertificate/{partnerCertId}
pmp.trust.certificates.post.rest.uri=${mosip.kernel.keymanager.url}/v1/keymanager/getCaCertificates
pmp.download.trust.certificates.get.rest.uri=${mosip.kernel.keymanager.url}/v1/keymanager/getCACertificateTrustPath/{caCertId}

# IAM
mosip.iam.adapter.clientid=mosip-pms-client
mosip.iam.adapter.clientsecret=${mosip.pms.client.secret}
mosip.iam.adapter.appid=partner

mosip.iam.authorization_endpoint=${mosip.iam.base-url}/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.token_endpoint=${mosip.iam.base-url}/auth/realms/mosip/protocol/openid-connect/token

# master data endpoint to fetch template
pmp.partner.email.template.get.rest.uri=${mosip.api.internal.url}/v1/masterdata/templates/{langcode}/{templatetypecode}

# notifier
pmp.partner.email.send.post.uri=${mosip.api.internal.url}/v1/notifier/email/send

#Cron job schedule
mosip.pms.batch.job.root.cert.expiry.cron.schedule=* * * * * ?

#templates
email.notification.partner.cert.expiry.template=PARTNER_CERT_EXPIRY_TEMPLATE
email.notification.intermediate.cert.expiry.template=INTERMEDIATE_CERT_EXPIRY_TEMPLATE
email.notification.root.cert.expiry.template=ROOT_CERT_EXPIRY_TEMPLATE
