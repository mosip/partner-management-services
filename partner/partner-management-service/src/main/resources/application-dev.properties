#server.servlet.contextPath=/partnermanagement
#server.servlet.version=/v1
## For PMS
javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url = jdbc:postgresql://dev.mosip.net:30090/mosip_pms
javax.persistence.jdbc.password = mosip123
javax.persistence.jdbc.user = postgres
javax.persistence.jdbc.schema = pms
hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

## For Authenticate Device
mosip.datasource.authdevice.jdbc.driver=org.postgresql.Driver
mosip.datasource.authdevice.jdbc.url = jdbc:postgresql://dev.mosip.net:30090/mosip_authdevice
mosip.datasource.authdevice.jdbc.password = mosip123
mosip.datasource.authdevice.jdbc.user = authdeviceuser
mosip.datasource.authdevice.jdbc.schema = authdevice
mosip.datasource.authdevice.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

## For Registration Device
mosip.datasource.regdevice.jdbc.driver=org.postgresql.Driver
mosip.datasource.regdevice.jdbc.url = jdbc:postgresql://dev.mosip.net:30090/mosip_regdevice
mosip.datasource.regdevice.jdbc.password = mosip123
mosip.datasource.regdevice.jdbc.user = regdeviceuser
mosip.datasource.regdevice.jdbc.schema = regdevice
mosip.datasource.regdevice.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

hibernate.jdbc.lob.non_contextual_creation=true
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.format_sql=false
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false

# logging level
logging.level.org.springframework=ERROR
logging.level.com.mkyong=DEBUG

# output to a file
logging.file=app.log

# temp folder example
#logging.file=${user.dir}\app.log
logging.pattern.file=%d %p %c{1.} [%t] %m%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

websub.publish.url=
pmp.allowed.credential.types=
policy.credential.type.mapping.allowed.partner.types=Credential_Partner,Online_Verification_Partner
mosip.kernel.idgenerator.misp.license-key-length = 50
mosip.pmp.misp.license.expiry.period.indays = 90
pmp.partner.valid.email.address.regex=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$
pmp.partner.partnerId.max.length=12
pmp.bioextractors.required.partner.types = Credential_Partner
### For getting device code 
masterdata.registerdevice.timestamp.validate=+5
mosip.kernel.masterdata.audit-url=https://dev.mosip.net/v1/auditmanager/audits
mosip.base.url=https://dev.mosip.net
mosip.kernel.sign-url=https://dev.mosip.net/v1/keymanager/sign
mosip.kernel.sign-validate-url=https://dev.mosip.net/v1/keymanager/validate
mosip.kernel.device.search-url=https://dev.mosip.net/v1/masterdata/devices/search
token.request.appid=admin
token.request.password=mosip
token.request.username=110005
token.request.version=string
token.request.id=v1
token.request.issuerUrl=https://dev.mosip.net/v1/authmanager/authenticate/clientidsecretkey
token.request.clientId=admin
PASSWORDBASEDTOKENAPI=https://dev.mosip.net/v1/authmanager/authenticate/useridPwd
mosip.pmp.auth.appId =partner
mosip.pmp.auth.clientId=mosip-partner-client
mosip.pmp.auth.secretKey= abc123
pms.cert.service.token.request.issuerUrl=https://dev.mosip.net/v1/authmanager/authenticate/clientidsecretkey
pms.cert.service.token.request.clientId=mosip-partner-client
pmp.ca.certificaticate.upload.rest.uri=https://dev.mosip.net/v1/keymanager/uploadCACertificate
pmp.partner.certificaticate.upload.rest.uri=https://dev.mosip.net/v1/keymanager/uploadPartnerCertificate
pmp.partner.certificaticate.get.rest.uri=https://dev.mosip.net/v1/keymanager/getPartnerCertificate/{partnerCertId}
pmp-keymanager.upload.other.domain.cert.rest.uri=https://dev.mosip.net/v1/keymanager/uploadOtherDomainCertificate
pmp.certificaticate.datashare.rest.uri=https://dev.mosip.net/v1/datashare/create
pms.certs.datashare.policyId=mpolicy-default-cert
pms.certs.datashare.subscriberId=mpartner-default-cert
application.id=PMS
keycloak.verify-token-audience=true

###############Keycloak configuration ##########################
mosip.iam.base-url=https://dev.mosip.net/keycloak	
mosip.iam.realm.operations.base-url = ${mosip.iam.base-url}/auth/admin/realms/{realmId}
mosip.iam.admin-url =${mosip.iam.base-url}/auth/admin/
mosip.iam.admin-realm-id =admin
mosip.iam.roles-extn-url =realms/mosip/roles
mosip.iam.users-extn-url = realms/mosip/users
mosip.iam.role-user-mapping-url =/{userId}/role-mappings/realm
mosip.iam.open-id-url =${mosip.iam.base-url}/auth/realms/{realmId}/protocol/openid-connect/
mosip.iam.master.realm-id=master
mosip.iam.default.realm-id=mosip	
mosip.pmp.partner.policy.expiry.period.indays=180
mosip.iam.pre-reg_user_password =mosip
mosip.keycloak.admin.client.id=admin-cli
mosip.keycloak.admin.user.id=admin
mosip.keycloak.admin.secret.key=admin

# IAM
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.clientID=mosip-pms-client
mosip.iam.module.clientsecret=abc123
mosip.iam.module.redirecturi=${mosipbox.public.url}/v1/admin/login-redirect/
mosip.iam.module.login_flow.scope=cls
mosip.iam.module.login_flow.response_type=code
mosip.iam.authorization_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.iam.token_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/token

#------------------------Auth-Adapter-----------------------------------------------
auth.server.validate.url=${mosip.base.url}/v1/authmanager/authorize/admin/validateToken
auth.server.admin.validate.url=${mosip.base.url}/v1/authmanager/authorize/admin/validateToken
auth.jwt.secret=authjwtsecret
auth.jwt.base=Mosip-Token
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter
pmp.api.version=v1
server.port=9103
server.servlet.context-path=/partnermanagement/${pmp.api.version}/partners

mosip.stage.environment=Developer
partner.search.maximum.rows=5

# Map to find the realm for the inputted appid to get the token from OIDC provider.
mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}
mosip.pms.ui.required.roles=MISP_PARTNER

# IAM
mosipbox.public.url=https://dev.mosip.net
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.clientID=mosip-pms-client
mosip.iam.module.clientsecret=abc123
mosip.iam.module.redirecturi=${mosipbox.public.url}/partnermanagement/v1/partners/login-redirect/
mosip.iam.module.login_flow.scope=cls
mosip.iam.module.login_flow.response_type=code
mosip.iam.authorization_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.iam.token_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/token

emailResourse.url=https://dev.mosip.net/v1/notifier/email/send
resource.template.url=https://dev.mosip.net/v1/masterdata/templates/{langcode}/{templatetypecode}
timeZone=Asia/Calcutta
mosip.mandatory-languages=eng
notifications.sent.before.days = 3
pms.notifications-schedule.init-delay = 24
pms.notifications-schedule.fixed-rate=24


partner.registration.sub-template = partner-reg-sub-template
partner.reg.content-template=partner-reg-content-template
partner.status.sub-template=partner-status-sub-template
partner.status.content-template=partner-status-content-template
partner.apikey.status.sub-template=partner-apikey-status-sub-template								   
apikey.status.content-template=apikey-status-content-template

pmp.api.version=v1
server.port=9109
server.servlet.context-path=/${pmp.api.version}/partnermanager

auth.server.validate.url=http://kernel-auth-service.default:80/v1/authmanager/authorize/admin/validateToken
mosip.keycloak.issuerUrl=${mosipbox.public.url}/auth/realms/mosip
auth-token-generator.rest.issuerUrl=${mosip.keycloak.issuerUrl}

# URL to get new Auth Token from OIDC provider & to do online validation of auth token with OIDC provider.
auth.server.admin.issuer.uri=${mosipbox.public.url}/keycloak/auth/realms/
auth.server.admin.offline.token.validate=false

# Map to find the realm for the inputted appid to get the token from OIDC provider.
mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}
auth.server.admin.allowed.audience=mosip-regproc-client,mosip-prereg-client,mosip-admin-client,mosip-partner-client,mosip-crereq-client,mosip-creser-client,mosip-datsha-client,mosip-ida-client,mosip-resident-client,mosip-reg-client

mosip.notification.timezone=GMT+05:30