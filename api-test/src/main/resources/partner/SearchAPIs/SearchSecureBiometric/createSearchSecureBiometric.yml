createSearchSecureBiometric:
   Partner_SearchSecureBiometric_AllValid_Smoke:
      endPoint: /v1/partnermanager/securebiometricinterface/search
      uniqueIdentifier: TC_PMS_createSearchSecureBiometric_01
      description: Create Search Secure Biometric with valid details
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometric
      outputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometricResult
      input: '{
  "pageFetch": "$REMOVE$",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$"
}'
      output: '{
}'
   Partner_SearchSecureBiometric_Only_FilterCriteria_Smoke:
      endPoint: /v1/partnermanager/securebiometricinterface/search
      uniqueIdentifier: TC_PMS_createSearchSecureBiometric_02
      description: Create Search Secure Biometric with Only FilterCriteria
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometric
      outputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometricResult
      input: '{
      "filters": [
      {
        "columnName": "providerId",
        "type": "equals",
        "value": "Tech-123"
      }
    ],
  "pageFetch": "$REMOVE$",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$"
}'
      output: '{
}'
   Partner_SearchSecureBiometric_Only_SortCriteria_Smoke:
      endPoint: /v1/partnermanager/securebiometricinterface/search
      uniqueIdentifier: TC_PMS_createSearchSecureBiometric_03
      description: Create Search Secure Biometric with Only SortCriteria
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometric
      outputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometricResult
      input: '{
      "sort": [
      {
        "sortField": "swCreateDateTime",
        "sortType": "asc"
      }
    ],
  "pageFetch": "$REMOVE$",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$"
}'
      output: '{
}'
   Partner_SearchSecureBiometric_Only_PaginationCriteria_Smoke:
      endPoint: /v1/partnermanager/securebiometricinterface/search
      uniqueIdentifier: TC_PMS_createSearchSecureBiometric_04
      description: Create Search Secure Biometric with Only PaginationCriteria
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometric
      outputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometricResult
      input: '{
  "pageFetch": "10",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$"
}'
      output: '{
}'
   Partner_SearchSecureBiometric_type_contains_Smoke_asc_sid:
      endPoint: /v1/partnermanager/securebiometricinterface/search
      uniqueIdentifier: TC_PMS_createSearchSecureBiometric_05
      description: Create Search Secure Biometric while keeping Type parameter as contains and filter data in ascending order
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometric
      outputTemplate: partner/SearchAPIs/SearchSecureBiometric/createSearchSecureBiometricResult
      input: '{
    "filters": [
      {
        "columnName": "providerId",
        "type": "equals",
        "value": "Tech-123"
      }
    ],
    "sort": [
      {
        "sortField": "swCreateDateTime",
        "sortType": "asc"
      }
    ],
  "pageFetch": "10",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$"
}'
      output: '{
}'