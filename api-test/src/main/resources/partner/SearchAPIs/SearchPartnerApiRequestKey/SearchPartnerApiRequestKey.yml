SearchPartnerApiRequestKey:
   Partner_SearchPartnerApiRequestKey_AllValid_Smoke:
      endPoint: /v1/partnermanager/partners/apikey/request/search
      uniqueIdentifier: TC_PMS_SearchPartnerApiRequestKey_01
      description: Create Search Partner API Request Key with valid data
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKey
      outputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKeyResult
      input: '{
  "pageFetch": "$REMOVE$",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$",
  "version": "v1"
}'
      output: '{
}'
   Partner_SearchPartnerApiRequestKey_Only_FilterCriteria_Smoke:
      endPoint: /v1/partnermanager/partners/apikey/request/search
      uniqueIdentifier: TC_PMS_SearchPartnerApiRequestKey_02
      description: Create Search Partner API Request Key with Only FilterCriteria
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKey
      outputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKeyResult
      input: '{
    "filters": [
      {
        "columnName": "id",
        "type": "unique",
        "value": "mpartner_policy_auth_req"
      }
    ],
  "pageFetch": "$REMOVE$",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$",
  "version": "v1"
}'
      output: '{
}'
   Partner_SearchPartnerApiRequestKey_Only_SortCriteria_Smoke:
      endPoint: /v1/partnermanager/partners/apikey/request/search
      uniqueIdentifier: TC_PMS_SearchPartnerApiRequestKey_03
      description: Create Search Partner API Request Key with Only SortCriteria
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKey
      outputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKeyResult
      input: '{
  "sort": [
      {
        "sortField": "id",
        "sortType": "desc"
      }
    ],
  "pageFetch": "$REMOVE$",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$",
  "version": "v1"
}'
      output: '{
}'
   Partner_SearchPartnerApiRequestKey_Only_PaginationCriteria_Smoke:
      endPoint: /v1/partnermanager/partners/apikey/request/search
      uniqueIdentifier: TC_PMS_SearchPartnerApiRequestKey_04
      description: Create Search Partner API Request Key with Only PaginationCriteria
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKey
      outputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKeyResult
      input: '{
  "pageFetch": "10",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$",
  "version": "v1"
}'
      output: '{
}'
   Partner_SearchPartnerApiRequestKey_type_contains_Smoke_asc_sid:
      endPoint: /v1/partnermanager/partners/apikey/request/search
      uniqueIdentifier: TC_PMS_SearchPartnerApiRequestKey_05
      description: Create Search Partner API Request Key while keeping Type parameter as contains and filter data in ascending order
      role: partner
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKey
      outputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKeyResult
      input: '{
    "filters": [
      {
        "columnName": "id",
        "type": "unique",
        "value": "mpartner_policy_auth_req"
      }
    ],
  "sort": "$IGNORE$",
  "pageFetch": "1",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$",
  "version": "v1"
}'
      output: '{
}'

   Partner_SearchPartnerApiRequestKey_type_contains_invalid_pagination:
      endPoint: /v1/partnermanager/partners/apikey/request/search
      uniqueIdentifier: TC_PMS_SearchPartnerApiRequestKey_06
      description: Create Search Partner API Request Key while keeping Type parameter as contains and invalid pagination
      role: partner
      restMethod: post
      inputTemplate: partner/SearchAPIs/SearchPartnerApiRequestKey/searchPartnerApiRequestKey
      outputTemplate: partner/error
      input: '{
    "filters": [
      {
        "columnName": "id",
        "type": "unique",
        "value": "mpartner_policy_auth_req"
      }
    ],
  "sort": "$IGNORE$",
  "pageFetch": "0",
  "pageStart": "0",
  "requesttime": "$TIMESTAMP$",
  "version": "v1"
}'
      output: '{
   "errors": [
    {
      "errorCode": "PMS-MSD-313"
    }
  ]
}'