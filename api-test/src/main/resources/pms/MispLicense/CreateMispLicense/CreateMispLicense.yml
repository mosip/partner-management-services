CreateMispLicense:
   Pms_CreateMispLicense_allValid_smoke_sid:
      endPoint: /v1/partnermanager/misps
      uniqueIdentifier: TC_PMS_CreateMispLicense_01
      description: Create MISP License Partner
      role: partner
      restMethod: post
      inputTemplate: pms/MispLicense/CreateMispLicense/createMispLicense
      outputTemplate: pms/MispLicense/CreateMispLicense/createMispLicenseResult
      input: '{
   "providerId": "MISP-AUTOMATION",
   "requesttime": "$TIMESTAMP$"
}'
      output: '{
   "providerId": "MISP-AUTOMATION",
   "licenseKeyStatus": "Active"
}'
   Pms_CreateMispLicense_MispLicense_allValid_smoke_sid:
      endPoint: /v1/partnermanager/misps
      uniqueIdentifier: TC_PMS_CreateMispLicense_02
      description: Create MISP License Partner with all valid details
      role: partner
      restMethod: post
      inputTemplate: pms/MispLicense/CreateMispLicense/createMispLicense
      outputTemplate: pms/MispLicense/CreateMispLicense/createMispLicenseResult
      input: '{
   "providerId": "MISP2-AUTOMATION",
   "requesttime": "$TIMESTAMP$"
}'
      output: '{
   "providerId": "MISP2-AUTOMATION",
   "licenseKeyStatus": "Active"
}'
   Pms_CreateMispLicense_InValid_ProviderId:
      endPoint: /v1/partnermanager/misps
      uniqueIdentifier: TC_PMS_CreateMispLicense_03
      description: Create MISP License Partner while keeping invalid ProviderID
      role: partner
      restMethod: post
      inputTemplate: pms/MispLicense/CreateMispLicense/createMispLicense
      outputTemplate: pms/error
      input: '{
   "providerId": "asdfgsd",
   "requesttime": "$TIMESTAMP$"
}'
      output: '{
   "errors": [
    {
      "errorCode": "PMS_MSP_005"
    }
  ]
}'
   